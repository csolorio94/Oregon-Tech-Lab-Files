<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AirlineReservationDataSet" targetNamespace="http://tempuri.org/AirlineReservationDataSet.xsd" xmlns:mstns="http://tempuri.org/AirlineReservationDataSet.xsd" xmlns="http://tempuri.org/AirlineReservationDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AirlineReservationConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AirlineReservationConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AirlineGUI.Properties.Settings.GlobalReference.Default.AirlineReservationConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SeatsTableAdapter" GeneratorDataComponentClassName="SeatsTableAdapter" Name="Seats" UserDataComponentName="SeatsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AirlineReservationConnectionString (Settings)" DbObjectName="dbo.Seats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Seats] WHERE (([Seat] = @Original_Seat) AND ([Reserved] = @Original_Reserved))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Seat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Reserved" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reserved" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Seats] ([Seat], [Reserved]) VALUES (@Seat, @Reserved);
SELECT Seat, Reserved FROM Seats WHERE (Seat = @Seat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Seat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Reserved" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reserved" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Seat, Reserved FROM dbo.Seats</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Seats] SET [Seat] = @Seat, [Reserved] = @Reserved WHERE (([Seat] = @Original_Seat) AND ([Reserved] = @Original_Reserved));
SELECT Seat, Reserved FROM Seats WHERE (Seat = @Seat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Seat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Reserved" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reserved" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Seat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Reserved" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Reserved" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Seat" DataSetColumn="Seat" />
              <Mapping SourceColumn="Reserved" DataSetColumn="Reserved" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AirlineReservationDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="AirlineReservationDataSet" msprop:Generator_UserDSName="AirlineReservationDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Seats" msprop:Generator_TableClassName="SeatsDataTable" msprop:Generator_TableVarName="tableSeats" msprop:Generator_TablePropName="Seats" msprop:Generator_RowDeletingName="SeatsRowDeleting" msprop:Generator_RowChangingName="SeatsRowChanging" msprop:Generator_RowEvHandlerName="SeatsRowChangeEventHandler" msprop:Generator_RowDeletedName="SeatsRowDeleted" msprop:Generator_UserTableName="Seats" msprop:Generator_RowChangedName="SeatsRowChanged" msprop:Generator_RowEvArgName="SeatsRowChangeEvent" msprop:Generator_RowClassName="SeatsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Seat" msprop:Generator_ColumnVarNameInTable="columnSeat" msprop:Generator_ColumnPropNameInRow="Seat" msprop:Generator_ColumnPropNameInTable="SeatColumn" msprop:Generator_UserColumnName="Seat" type="xs:int" />
              <xs:element name="Reserved" msprop:Generator_ColumnVarNameInTable="columnReserved" msprop:Generator_ColumnPropNameInRow="Reserved" msprop:Generator_ColumnPropNameInTable="ReservedColumn" msprop:Generator_UserColumnName="Reserved" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Seats" />
      <xs:field xpath="mstns:Seat" />
    </xs:unique>
  </xs:element>
</xs:schema>